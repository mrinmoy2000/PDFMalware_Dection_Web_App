import os
import pickle
import numpy as np
import extract_pdf_features
from flask import Flask, flash, request, redirect, render_template
from werkzeug.utils import secure_filename

UPLOAD_FOLDER = './static/uploads'
ALLOWED_EXTENSIONS = set(['pdf'])

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def extract_data(filename):
        results_dict = extract_pdf_features.PDFiDMain(filename)
        pdf_data = {}

        # pdfsize
        pdfsize = os.path.getsize(filename)
        if pdfsize > 1024:
            pdfsize = pdfsize / 1024
        pdf_data['pdfsize'] = pdfsize

        # images
        images = results_dict['obj']
        pdf_data['images'] = images

        # obj
        obj = results_dict['obj']
        pdf_data['obj'] = obj

        # xref
        xref = results_dict['xref']
        pdf_data['xref'] = xref

        # pageno
        pageno = results_dict['/Page']
        pdf_data['pageno'] = pageno

        # Javascript
        Javascript = results_dict['/JavaScript']
        pdf_data['Javascript'] = Javascript

        # EmbeddedFile
        EmbeddedFile = results_dict['/EmbeddedFile']
        pdf_data['EmbeddedFile'] = EmbeddedFile

        # Colors
        Colors = results_dict['/Colors > 2^24']
        pdf_data['Colors'] = Colors

        # startxref
        startxref = results_dict['startxref']
        pdf_data['startxref'] = startxref

        return pdf_data

def predict_class(MODEL, filename):
    
    pdf_data = extract_data(filename)

    data_np = np.array(list(pdf_data.values())).reshape(1, -1)
    pred = MODEL.predict(data_np)

    os.remove(filename)
    if pred[0] == 0:
        return "The PDF is safe."
    else:
        return "The PDF might contain malware."

def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route("/home", methods=['GET', 'POST'])
@app.route("/", methods=['GET', 'POST'])
def main():
    prediction = ""
    MODEL = pickle.load(open('static/Model/model.sav', 'rb'))
    if request.method == 'POST':
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            prediction = predict_class(MODEL, UPLOAD_FOLDER + '/' + filename)
        
    return render_template('index.html', result=prediction)